#!/usr/bin/env -S python
import os
import sys
import subprocess as sp
from qtpy.QtGui import *
from qtpy.QtWidgets import *
from qtpy.QtCore import *
import qdarkstyle
import psutil

# Depends
# python-pyqt5 python-qdarkstyle python-psutil

# Current version
current_version = '0.1.3'


class Filesystem:

    @staticmethod
    def getFsType():
        partitions = psutil.disk_partitions()
        fstype = 'unknow'
        for partition in partitions:
            if partition.mountpoint == '/':
                fstype = partition.fstype
                break

        return fstype

    @staticmethod
    def isSnapperPresent():
        retValue = False
        outputStatus = sp.getstatusoutput('which snapper')
        if outputStatus[0] == 0:
            retValue = True

        return retValue

    @staticmethod
    def isTimeshiftPresent():
        retValue = False
        outputStatus = sp.getstatusoutput('which timeshift')
        if outputStatus[0] == 0:
            retValue = True

        return retValue


class Version:

    @staticmethod
    def getAppName():
        return 'Xerolinux Filesystem Tool'

    @staticmethod
    def getVersion():
        return current_version


class mainWindow(QMainWindow):
    app = QApplication(sys.argv)
    verticalLayout = QVBoxLayout()
    messageLabel = QLabel()
    configSnapperBtrfsPushButton = QPushButton('Configure Snapper')
    configTimeshiftBtrfsPushButton = QPushButton('Configure Timeshift btrfs')
    configTimeshiftExt4PushButton = QPushButton('Configure Timeshift ext4')
    xerolinuxRollbackPushButton = QPushButton('run Xerolinux Rollback Tool')
    timeshiftPushButton = QPushButton('run Timeshift')
    exitPushButton = QPushButton('E&xit')


    def __init__(self):
        super().__init__(parent=None)
        self.app.setStyleSheet(qdarkstyle.load_stylesheet())
        self.setWindowTitle(f'Xerolinux Rollback Utility v. {Version.getVersion()}')
        self.setFixedSize(QSize(640, 480))
        ############
        # Title
        self.setWindowTitle(f'{Version.getAppName()} v.{Version.getVersion()}')
        self.setWindowIcon(QIcon('./images/xerolinux-icon.png'))
        ###################################################
        # Vertical Default Layout ###
        self.verticalLayout.setAlignment(Qt.AlignTop)
        ####
        # Message Label
        self.verticalLayout.addWidget(self.messageLabel)
        ###
        # Set the central widget of the Window.
        centralWidget = QWidget()
        centralWidget.setLayout(self.verticalLayout)
        self.setCentralWidget(centralWidget)
        ###
        # Setup UI
        self.initUI()
        ############
        # setup stylesheet
        # the default system in qdarkstyle uses qtpy environment variable
        self.show()
        self.centerMe()
        #####
        sys.exit(self.app.exec())


    def initUI(self):
        self.messageLabel.setAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.messageLabel.setText(f':: You are using {Filesystem.getFsType()} filestystem ::')
        if Filesystem.getFsType() == 'btrfs':
            if Filesystem.isSnapperPresent():
                self.xerolinuxRollbackPushButton.clicked.connect(self.xerolinuxRollbackClick)
                self.verticalLayout.addWidget(self.xerolinuxRollbackPushButton)
            else:
                self.verticalLayout.addWidget(self.configSnapperBtrfsPushButton)
                self.configSnapperBtrfsPushButton.clicked.connect(self.configSnapperClick)
                self.verticalLayout.addWidget(self.configTimeshiftBtrfsPushButton)
                self.configTimeshiftBtrfsPushButton.clicked.connect(self.configTimeshiftBtrfsClick)
        else:
            if Filesystem.isTimeshiftPresent():
                self.verticalLayout.addWidget(self.timeshiftPushButton)
                self.timeshiftPushButton.clicked.connect(self.timeshiftClick)
            else:
                self.verticalLayout.addWidget(self.configTimeshiftExt4PushButton)
                self.configTimeshiftExt4PushButton.clicked.connect(self.configTimeshiftExt4Click)


        self.verticalLayout.addWidget(self.exitPushButton)
        self.exitPushButton.clicked.connect(self.exitApp)


    @staticmethod
    def xerolinuxRollbackClick():
        sp.getoutput('/usr/bin/xerolinux-rollback')


    @staticmethod
    def configSnapperClick():
        sp.getoutput('konsole --hide-menubar --hide-tabbar -e /usr/local/share/xerolinux-filesystem-tool-git/configure-snapper')


    @staticmethod
    def timeshiftClick():
        sp.getoutput('timeshift')


    @staticmethod
    def configTimeshiftBtrfsClick():
        sp.getoutput('konsole --hide-menubar --hide-tabbar -e /usr/local/share/xerolinux-filesystem-tool-git/configure-timeshift-btrfs')


    @staticmethod
    def configTimeshiftExt4Click():
        sp.getoutput('konsole --hide-menubar --hide-tabbar -e /usr/local/share/xerolinux-filesystem-tool-git/configure-timeshift-ext4')



    def centerMe(self):
        qtRectangle = self.frameGeometry()
        centerPoint = QDesktopWidget().availableGeometry().center()
        qtRectangle.moveCenter(centerPoint)
        self.move(qtRectangle.topLeft())

    def exitApp(self):
        self.app.quit()
        sys.exit(0)


if __name__ == '__main__':
    os.environ['QT_LOGGING_RULES'] = "qt5ct.debug=false"
    os.environ['QT_API'] = 'pyqt5'
    window = mainWindow()
